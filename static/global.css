@font-face {
    font-family: 'Kanit';
    src: url('Kanit.ttf') format('truetype');
}

body {
    position: fixed;
    width: 100vw;
}

* {
    font-family: 'Kanit', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

li, button {
    transition: filter 0.5s, text-shadow 0.5s;
    text-shadow: 0px 0px 5px #ffffff00;
    border: none;
}

.tile-link > div > div > div {
    transition: filter 0.5s, text-shadow 0.5s;
    text-shadow: 0px 0px 5px #ffffff00;
    border: none;
}

.tile-card:after {
  display: block;
    position: relative;
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0, #000000ed 100%);
    margin-top: -55%;
    height: 100%;
    width: 100%;
    content: '';
}

.tile-link > div > div:hover > div {
    filter: drop-shadow(0px 0px 9px rgba(255, 255, 255, 0.418));
    text-shadow: 0px 0px 12px #ffffffa9;
}

.tile {
    filter: drop-shadow(0px 0px 9px rgba(0, 0, 0, 1));
}

li:hover, button:hover, button:focus {
    filter: drop-shadow(0px 0px 9px rgba(255, 255, 255, 0.418));
    text-shadow: 0px 0px 12px #ffffffa9;
    border: none;
    outline: none!important;
}

@media screen and (min-width: 830px) {
    ul {
        display: flex!important;
    }

    button {
        display: none!important;
    }
}

@media screen and (min-width: 800px) {
    .shrink-footer {
        font-size: 1.5rem;
        line-height: 2rem;
    }
}

@media screen and (max-width: 360px) {
    button {
        display: none!important;
    }
}

@media screen and (max-width: 300px) {
    .warning {
        display: block!important;
    }

    footer {
        display: none!important;
    }
}

header {
    background-image: linear-gradient(to bottom, #181818, #141414, #0f0f0f);
}

article {
    background-image: linear-gradient(to bottom, #0f0f0f 25%,#000000);
}

footer > div, nav {
    flex: 1;
    display: flex;
}

.tile {
    aspect-ratio: 1920/1080;
}

a {
    cursor: pointer;
}

.small {
    flex-grow: .1;
    flex-shrink: 2;
    flex-basis: 0%;
}

.pixelated {
    image-rendering: pixelated;
    filter: drop-shadow(0px 0px 9px rgba(255, 255, 255, 0.418));
}

:root {
  color-scheme: dark;
}

body {
    height: 100vh;
    color: white;
    background: black;
}